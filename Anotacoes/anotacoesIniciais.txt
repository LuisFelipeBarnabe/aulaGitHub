== Diferenca de Git e GitHub ==

Git -> Sistema de versionamento, controlar versões como exemplo as Branchs

GitHub -> Serfico social de hospedagem de projetos



==>> Comandos principais

-> git init
-- o git init cria um repositorio de acordo com a pasta em que esteja 
ou seja, essa pasta ainda n é versionada pelo git, assim, com esse comando, voce torna ela em um repositorio e 
diz que vai ser versionada pelo git

-> git add .
-- com esse commando voce diz que quer add todos os arquivos para o commit 
esse comando joga as alterações em um estado de stage, que quando voce commita, ele commita apenas oq esta em stage 

-> git reset
-- ele tira tudo que colocasse na area de stage, sendo necessario add novamente para commitar

-> git status
-- esse cara mostra os arquivos que serão commitados, aqueles que voce colocou no git add . 
o que fica em vermelho, é o que ainda n foi add em stage, o que fica em verde, é o que ja foi add
-tem 3 casos 
-modified -> modificado
-deleted -> deletado
-untracked -> novo arquivo

-> git commit -m "Sua mensagem de commit"
-- ele cria uma nova versao no git jogando as alterações selecionadas nos comandos anteriores

-> git branch -M main
-- ele pega a branch e nomeia ela para main

-> git remote add origin git@github.com:seuusuario/seurepositorio.git
-- Esse comando serve para adicionar um repositório remoto ao seu repositório local. 
Ele vincula o seu repositório local ao repositório remoto hospedado no GitHub

-> git push -u origin main
-- por fim esse comando manda eu jogar o que ta main para a origin que e a associação do repositorio remoto
Basicamente mandando a nova versão para o github
Isso quando for a primeira vez que for dar o git push 
Nas outras vezes apenas um git push basta 

-> git clone git@github.com:seuusuario/seurepositorio.git
-- serve para clonar um repositorio remoto para sua maquina local 

-> code .
-- serve para abrir o vs code dentro do terminal do git, mas ja deve estar na pasta do projeto

-> git log 
-- da para ver o log de todos os commit do projeto, ainda informando ate que ponto esta no repositorio remoto 
Mostrando inclusive o autor do commit ´-´ -> para sair deve digitar a tecla 'q'

-> git log --oneline
-- tambem mostra o log, porem de uma maneira mais resumida, mostrando apenas o comentario e o codigo do commit 
 (HEAD -> main, origin/main, origin/HEAD) -> o commit que tiver essa linha siginifica que ate ali esta alinhado com o repositorio remoto, se tiver algo acima 
 significa que tem mudanças para subir 

 -> clear
 -- auto explicativo -> limpa o lixo da tela do git bash

 -> git diff
 -- comando que mostra a diferenca entre arquivos modificados
 da para ver as diferencas entre o remoto e local de um unico arquivo tb, fazendo o seguinte 
 -- git diff seuArquivo.html

-> git checkout 
-- mais utilizado para navegar entre branchs, porem pode ser usado para navegar entre commits 
Cada commit possui um codigo 
